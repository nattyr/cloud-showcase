on:
    pull_request:
        branches:
            - main
        paths: 'terraform/**'

permissions:
    id-token: write
    contents: read
    pull-requests: write

env:
  TF_LOG: INFO
  AWS_REGION: ${{ vars.AWS_REGION }}

jobs:
  deploy:
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash
        working-directory: ./terraform
    steps:
      - name: Git checkout
        uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with: 
          role-to-assume: arn:aws:iam::${{secrets.AWS_ACCOUNT_ID}}:role/${{secrets.AWS_ROLE_NAME}}
          aws-region: ${{vars.AWS_REGION}}

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3

      - name: Terraform Init
        id: init
        env:
          AWS_BUCKET_KEY_NAME: ${{secrets.AWS_TFSTATE_KEY_NAME}}
        run: terraform init -backend-config="bucket=${{secrets.AWS_TFSTATES_BUCKET_NAME}}" -backend-config="key=${{secrets.AWS_TFSTATE_KEY_NAME}}" -backend-config="region=${{vars.AWS_REGION}}"

      - name: Terraform Validate
        id: validate
        run: terraform validate -no-color

      - name: Terraform Plan
        id: plan
        run: terraform plan -no-color
        continue-on-error: true

      - uses: actions/github-script@v7
        env:
          PLAN: "terraform\n${{ steps.plan.outputs.stdout }}"
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const output = 
              #### Terraform Initialization: \`${{ steps.init.outcome }}\`
              #### Terraform Validation: \`${{ steps.validate.outcome }}\`
              #### Terraform Plan: \`${{ steps.plan.outcome }}\`
              
              <details><summary>Validation Output</summary>
              \`\`\`\n
              ${{ steps.validate.outputs.stdout }}
              \`\`\`
              </details>
              
              <details><summary>Plan Output</summary>
              \`\`\`\n
              ${process.env.PLAN}
              \`\`\`
              </details>;

            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: output
            })
            
        
